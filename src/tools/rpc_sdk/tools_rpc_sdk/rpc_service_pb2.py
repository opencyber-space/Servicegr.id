# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rpc_service.proto
# Protobuf Python Version: 4.25.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x11rpc_service.proto\x12\x07toolrpc\"7\n\x13\x43\x61llFunctionRequest\x12\x11\n\ttool_name\x18\x01 \x01(\t\x12\r\n\x05input\x18\x02 \x01(\x0c\"\xb6\x01\n\x14\x43\x61llFunctionResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0e\n\x06output\x18\x02 \x01(\x0c\x12\r\n\x05\x65rror\x18\x03 \x01(\t\x12=\n\x08metadata\x18\x04 \x03(\x0b\x32+.toolrpc.CallFunctionResponse.MetadataEntry\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x32[\n\x0cToolExecutor\x12K\n\x0c\x43\x61llFunction\x12\x1c.toolrpc.CallFunctionRequest\x1a\x1d.toolrpc.CallFunctionResponseb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'rpc_service_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  DESCRIPTOR._options = None
  _globals['_CALLFUNCTIONRESPONSE_METADATAENTRY']._options = None
  _globals['_CALLFUNCTIONRESPONSE_METADATAENTRY']._serialized_options = b'8\001'
  _globals['_CALLFUNCTIONREQUEST']._serialized_start=30
  _globals['_CALLFUNCTIONREQUEST']._serialized_end=85
  _globals['_CALLFUNCTIONRESPONSE']._serialized_start=88
  _globals['_CALLFUNCTIONRESPONSE']._serialized_end=270
  _globals['_CALLFUNCTIONRESPONSE_METADATAENTRY']._serialized_start=223
  _globals['_CALLFUNCTIONRESPONSE_METADATAENTRY']._serialized_end=270
  _globals['_TOOLEXECUTOR']._serialized_start=272
  _globals['_TOOLEXECUTOR']._serialized_end=363
# @@protoc_insertion_point(module_scope)
